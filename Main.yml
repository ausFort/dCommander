dCommander_Main:
  type: world
  debug: false
  events:
    on server start:
      - announce to_console "<&2>dCommander loading!"
      - if <server.has_file[dCommander_Config.yml].not> {
        - inject locally initialise_config
      }
      else {
        - yaml load:dCommander_Config.yml id:dCC
      }
      - announce to_console "<&2>dCommander successfully loaded."

  initialise_config:
    - announce to_console "<&c>Generating new dCommander configuration file."
    - yaml create id:dCC
    - yaml set colors.primary:&f id:dCC
    - yaml set colors.secondary:&6 id:dCC
    - yaml savefile:dCommander_Config.yml id:dCC
    - announce to_console "<&2>dCommander configuration file generated."

dCommander_Format:
  type: format
  debug: false
  format: <proc[dPC].context[&7[<proc[dPCS]>dCommander&7]<proc[dPCP]> <text>]>

dPC:
  type: procedure
  debug: false
  definitions: M
  script:
  - determine <def[M].replace[regex:&([0-9a-fA-Fk-oK-OrR])].with[<red.substring[1,1]>$1]>

dPCP:
  type: procedure
  debug: false
  script:
  - determine <yaml[dCC].read[Colors.Primary]>

dPCS:
  type: procedure
  debug: false
  script:
  - determine <yaml[dCC].read[Colors.Secondary]>

dCommander_Require_Ingame_Handler:
  type: task
  debug: false
  script:
  - if <context.server> {
    - narrate format:dCommander_Format "You must be ingame to use this command!"
    - queue clear
  }

dCommander_Require_Player_Handler:
  type: task
  debug: false
  script:
  - if <context.server> {
    - narrate format:dCommander_Format "You must specify a player when in console!"
    - queue clear
  }
